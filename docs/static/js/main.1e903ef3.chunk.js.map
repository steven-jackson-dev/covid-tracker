{"version":3,"sources":["components/AppCards/Cards.module.css","components/AppFooter/index.js","components/AppCards/index.js","api/index.js","components/AppChart/index.js","components/AppCountryPicker/index.jsx","App.js","index.js","components/AppCountryPicker/CountryPicker.module.css"],"names":["module","exports","AppFooter","style","textAlign","margin","Typography","variant","component","AppCards","props","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","Card","xs","md","cx","card","infected","CardContent","gutterBottom","color","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","countryUrl","axios","get","desctructuredData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","AppChart","useState","setDailyData","useEffect","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","AppCountryPicker","handleCountryChange","setCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","appData","setAppData","fetchedData","Container","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1e903ef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3uJvm\",\"infected\":\"Cards_infected__1EB1j\",\"recovered\":\"Cards_recovered__2HFrN\",\"deaths\":\"Cards_deaths__1xFB2\",\"card\":\"Cards_card__2qjYg\"};","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nconst AppFooter = () => {\r\n    return (\r\n        <footer style={{ textAlign: 'center', margin: '2em 0' }}>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n                Steven Jackson - 2020\r\n            </Typography>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default AppFooter\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport styles from './Cards.module.css'\r\n\r\nconst AppCards = (props) => {\r\nconst {data: { confirmed, recovered, deaths, lastUpdate }} = props;\r\n    if (!confirmed) {\r\n        return <Typography style={{textAlign: \"center\"}} variant=\"h5\" component=\"h3\">Loading</Typography>\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Infected\r\n                    </Typography>\r\n                        <Typography gutterBottom color=\"textSecondary\" component=\"h6\" variant=\"h6\" >\r\n                            <CountUp className={styles.infected} start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of active cases of COVID-19\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Recovered\r\n                    </Typography>\r\n                        <Typography gutterBottom color=\"textSecondary\" component=\"h6\" variant=\"h6\" >\r\n                            <CountUp className={styles.recovered} start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of recoveries of COVID-19\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Deaths\r\n                    </Typography>\r\n                        <Typography gutterBottom color=\"textSecondary\" component=\"h6\" variant=\"h6\" >\r\n                            <CountUp className={styles.deaths} start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of deaths of COVID-19\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppCards\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let countryUrl = (country) ? `${url}/countries/${country}` :url;\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(countryUrl)\r\n        const desctructuredData = { confirmed, recovered, deaths, lastUpdate }\r\n        return desctructuredData\r\n    } catch (error) {\r\n        console.log(\"fetchData -> error\", error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        const desctructuredData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return desctructuredData\r\n    } catch (error) {\r\n        console.log(\"fetchData -> error\", error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`)\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        console.log(\"fetchData -> error\", error)\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from 'api'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nconst AppChart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setDailyData(await fetchDailyData())\r\n        })()\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData ? (\r\n            <Line data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'infected',\r\n                    borderColor: '#3333ff',\r\n                    backgroundColor: 'rgba(0, 0, 255, 0.1)',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'rgba(255, 0, 0, 0.5)',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true\r\n                }]\r\n            }} />\r\n        ) : null\r\n    );\r\n\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)',\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` }\r\n                }} />\r\n        ) : null\r\n    );\r\n\r\n\r\n    return (\r\n        <div>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppChart\r\n","import React, {useState, useEffect} from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from 'api'\r\nconst AppCountryPicker = (props) => {\r\n    const {handleCountryChange} = props\r\n    const [countries, setCountries] = useState([])\r\n    // console.log(\"CountryPicker -> countries\", countries)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setCountries(await fetchCountries())\r\n        })()\r\n    }, [setCountries]);\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n        <FormControl>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppCountryPicker\r\n","import React, {useEffect, useState} from 'react';\r\nimport { AppFooter } from 'components';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { Cards, Chart, CountryPicker } from 'components'\r\nimport { fetchData } from 'api'\r\n\r\nfunction App() {\r\n  \r\n  const [appData, setAppData] = useState({\r\n    data: {},\r\n    country: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setAppData({data: await fetchData()})\r\n    })()\r\n  }, []);\r\n\r\n  const handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    setAppData({data: fetchedData, country: country})\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n      <Typography style={{textAlign: \"center\", margin: \"1em 0\"}} variant=\"h4\" component=\"h1\">Covid-19 Tracker</Typography>\r\n        <Cards {...appData} />\r\n        <CountryPicker handleCountryChange={handleCountryChange} />\r\n        <Chart  {...appData}/>\r\n      </Container>\r\n      <AppFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename='/covid-tracker'>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__11Lzf\"};"],"sourceRoot":""}